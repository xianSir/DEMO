<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/jdbc
            http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
  <description>spring-mybatis基本配置文件</description>
  <!--配置数据源-->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
    <!-- 基本属性 url、user、password -->
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>

    <!-- 配置初始化大小、最小、最大 -->
    <property name="initialSize" value="${jdbc.pool.init}"/>
    <property name="minIdle" value="${jdbc.pool.minIdle}"/>
    <property name="maxActive" value="${jdbc.pool.maxActive}"/>

    <!-- 配置获取连接等待超时的时间 -->
    <property name="maxWait" value="60000"/>

    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="300"/>

    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="300000"/>
    <property name="testWhileIdle" value="true"/>
    <property name="testOnBorrow" value="false"/>
    <property name="testOnReturn" value="false"/>
  </bean>
  <!--配置mybatis sql工厂-->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="typeAliasesPackage" value="com.sykean.smartsite.entity"/>
    <!--         <property name="configLocation" value="classpath:mybatis-config.xml"></property>  -->
    <property name="mapperLocations" value="classpath*:mapper"/>
    <property name="plugins">
      <array>
        <bean class="com.github.pagehelper.PageInterceptor">
          <property name="properties">
            <value>
              dialect=mysql
            </value>
          </property>
        </bean>
      </array>
    </property>
  </bean>
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 -->
    <property name="basePackage" value="com.xks.dao"/>
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
  </bean>
  <!--开启事物-->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  <aop:config>
    <aop:pointcut id="allManagerMethod" expression="execution (* com..*.service.*.*(..))"/>
    <aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod"/>
  </aop:config>
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
      <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
      <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
      <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
      <tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
      <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
      <tx:method name="import*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
      <tx:method name="download*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
      <tx:method name="upload*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
      <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
      <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
      <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>
    </tx:attributes>
  </tx:advice>


</beans>